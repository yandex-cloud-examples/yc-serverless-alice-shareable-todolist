// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// DeleteListHandlerFunc turns a function with the right signature into a delete list handler
type DeleteListHandlerFunc func(DeleteListParams) middleware.Responder

// Handle executing the request and returning a response
func (fn DeleteListHandlerFunc) Handle(params DeleteListParams) middleware.Responder {
	return fn(params)
}

// DeleteListHandler interface for that can handle valid delete list params
type DeleteListHandler interface {
	Handle(DeleteListParams) middleware.Responder
}

// NewDeleteList creates a new http.Handler for the delete list operation
func NewDeleteList(ctx *middleware.Context, handler DeleteListHandler) *DeleteList {
	return &DeleteList{Context: ctx, Handler: handler}
}

/* DeleteList swagger:route DELETE /api/todo-lists/{list_id}/wa deleteList

DeleteList delete list API

*/
type DeleteList struct {
	Context *middleware.Context
	Handler DeleteListHandler
}

func (o *DeleteList) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewDeleteListParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
