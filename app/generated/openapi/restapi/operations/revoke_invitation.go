// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// RevokeInvitationHandlerFunc turns a function with the right signature into a revoke invitation handler
type RevokeInvitationHandlerFunc func(RevokeInvitationParams) middleware.Responder

// Handle executing the request and returning a response
func (fn RevokeInvitationHandlerFunc) Handle(params RevokeInvitationParams) middleware.Responder {
	return fn(params)
}

// RevokeInvitationHandler interface for that can handle valid revoke invitation params
type RevokeInvitationHandler interface {
	Handle(RevokeInvitationParams) middleware.Responder
}

// NewRevokeInvitation creates a new http.Handler for the revoke invitation operation
func NewRevokeInvitation(ctx *middleware.Context, handler RevokeInvitationHandler) *RevokeInvitation {
	return &RevokeInvitation{Context: ctx, Handler: handler}
}

/* RevokeInvitation swagger:route DELETE /api/todo-lists/{list_id}/users/{user_id}/wa revokeInvitation

RevokeInvitation revoke invitation API

*/
type RevokeInvitation struct {
	Context *middleware.Context
	Handler RevokeInvitationHandler
}

func (o *RevokeInvitation) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewRevokeInvitationParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
